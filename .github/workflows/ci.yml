name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend (API)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:16-3.4
        env:
          POSTGRES_USER: arip
          POSTGRES_PASSWORD: arip
          POSTGRES_DB: arip
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U arip -d arip" \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm install
      - name: Generate Prisma Client
        run: npm -w services/api run prisma:generate
      - name: Sync schema (db push)
        env:
          DATABASE_URL: postgresql://arip:arip@localhost:5432/arip
        run: |
          cd services/api
          npx prisma db push
      - name: Typecheck & build API
        run: npm -w services/api run build

  frontend:
    name: Frontend (Web)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm install
      - name: Build web
        run: npm -w apps/web run build

  ml:
    name: ML Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r services/ml/requirements.txt
      - name: Syntax check
        run: python -m compileall services/ml
